When would you want to use a remote repository rather than keeping all your work
local?

    Sharing your work with the wider community for them to use, extend and improve.
    Also with it remotely you don't necessarily need your local store - you could still work on the repo.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Depending on how you have the remote repo set up you could be drawing other changes down locally
    that have been provided by others that you don't want to absorb. Keeping it manual gives you the choice
    about what stays in your master repo.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branch - to create a new branch of code to experiment on without affecting the master branch of working production code.
    Fork - to take a copy of someone else's repository to make changes without affecting the original project.
    Clone - to take a copy of a repository so that you can work on it locally.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You have a complete record of all the commits and branches off the remote repository so you have a full history to work on

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    You could collaborate with some other cloud sharing collaboration file service but you would not have all the version
    control, audit trail etc.. You'd only have the physical files. With git and Github you can collaborate on the total
    history of the project and always have the full repo locally and remotely in sync.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    x
